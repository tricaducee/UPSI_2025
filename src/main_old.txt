#include "principal.h"

#ifdef __EMSCRIPTEN__
#include <emscripten.h>
#endif

All gAll;
int running = 1;

// Fonction pour gérer une frame du rendu
void main_loop(void)
{
    SDL_Event event;

    // Gestion des événements
    while (SDL_PollEvent(&event))
    {
        if (event.type == SDL_QUIT)
        {
            running = 0;

            stopMusic();
            #ifdef __EMSCRIPTEN__
            emscripten_cancel_main_loop();
            #endif
        }
    }

    // Call the text_render function to render "Hello World"
    text_render();

    // Définition de la couleur rouge
    SDL_SetRenderDrawColor(gAll.renderer, 255, 0, 0, 255);

    // Nettoyage de l'écran avec la couleur définie
    SDL_RenderClear(gAll.renderer);
a
    // Mise à jour de l'affichage
    SDL_RenderPresent(gAll.renderer);
}

int main(int argc, char *argv[])
{
    // Initialisation de la SDL (vidéo uniquement)
    if (SDL_Init(SDL_INIT_VIDEO | SDL_INIT_AUDIO | SDL_INIT_EVENTS) != 0)
    {
        printf("Erreur SDL_Init : %s\n", SDL_GetError());
        return 1;
    }

    // Initialize SDL_ttf
    // if (TTF_Init() == -1)
    // {
    //     printf("TTF could not initialize! TTF_Error: %s\n", TTF_GetError());
    //     SDL_Quit();
    //     return 1;
    // }

    // Load font
    // gAll.font = TTF_OpenFont("assets/font/BigShoulders-Thin.ttf", 24); // Adjust the path and size as needed
    // if (!gAll.font)
    // {
    //     printf("Failed to load font! TTF_Error: %s\n", TTF_GetError());
    //     TTF_Quit();
    //     SDL_Quit();
    //     return 1;
    // }

    // Create texture for "Hello World"
    // SDL_Color textColor = {255, 255, 255, 255}; // White color
    // SDL_Surface* textSurface = TTF_RenderText_Solid(gAll.font, "Hello World", textColor);
    // if (!textSurface)
    // {
    //     printf("Unable to render text surface! TTF_Error: %s\n", TTF_GetError());
    //     TTF_CloseFont(gAll.font);
    //     TTF_Quit();
    //     SDL_Quit();
    //     return 1;
    // }
    // gAll.textTexture = SDL_CreateTextureFromSurface(gAll.renderer, textSurface);
    // SDL_FreeSurface(textSurface);
    // if (!gAll.textTexture)
    // {
    //     printf("Unable to create texture from rendered text! SDL_Error: %s\n", SDL_GetError());
    //     TTF_CloseFont(gAll.font);
    //     TTF_Quit();
    //     SDL_Quit();
    //     return 1;
    // }
    
    // Création de la fenêtre
    gAll.window = SDL_CreateWindow(
        "Fenêtre Rouge SDL2 (Emscripten Compatible)",
        SDL_WINDOWPOS_CENTERED,
        SDL_WINDOWPOS_CENTERED,
        800,
        600,
        SDL_WINDOW_SHOWN
    );

    if (gAll.window == NULL)
    {
        printf("Erreur SDL_CreateWindow : %s\n", SDL_GetError());
        //text_cleanup(); // Clean up text-related resources
        SDL_Quit(); // Shut down SDL
        return 1;
    }

    // Création du gAll.renderer
    gAll.renderer = SDL_CreateRenderer(gAll.window, -1, SDL_RENDERER_ACCELERATED);
    if (gAll.renderer == NULL)
    {
        printf("Erreur SDL_CreateRenderer : %s\n", SDL_GetError());
        //text_cleanup(); // Clean up text-related resources
        SDL_DestroyWindow(gAll.window);
        SDL_Quit();
        return 1;
    }

    playMusic("assets/audio/musique.ogg");
    #ifdef __EMSCRIPTEN__
    // Boucle principale via emscripten (pour web)
    emscripten_set_main_loop(main_loop, 0, 1);
    #else
    // Boucle principale classique (Mac, Linux, Windows)
    while (running)
    {
        main_loop();
        SDL_Delay(16); // ~60 FPS
    }
    #endif

    // Clean up text-related resources
    //text_cleanup();

    // Clean up SDL resources
    SDL_DestroyRenderer(gAll.renderer);
    SDL_DestroyWindow(gAll.window);
    SDL_Quit();

    return 0;
}
